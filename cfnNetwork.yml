Description: >
  Adedokun Emmanuel / Udacity project 2
  This template deploys a VPC, with a pair of public and private subnets spread 
  across one Availabilty Zones. It deploys an Internet Gateway, with a default 
  route on the public subnets. It deploys one pair of NAT Gateways , 
  and default routes for them in the private subnets where the ec2 and load balancer are.
  Other resource are load balancers, AutoScaling and Security Groups


Parameters: 
  EnvironmentName: 
    Description: An environment name that will be prefixed to my provisioned resource names
    Type: String

  VpcCidr: 
    Description: my vpc CIDR Ip address
    Type: String
  
  PublicSubnetCIDR1:
    Type: String

  PublicSubnetCIDR2:
    Type: String
  
  PrivateSubnetCIDR1:
    Type: String
  
  PrivateSubnetCIDR2:
    Type: String

Resources: 
  CfnVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: !Ref EnvironmentName
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref CfnVPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CfnVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetCIDR1
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CfnVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetCIDR2
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CfnVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnetCIDR1
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CfnVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnetCIDR2
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
  
  NatGateWayEIP1: 
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  
  NatGateWayEIP2: 
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateWayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateWayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref CfnVPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Routes
  
  DefualtPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref CfnVPC
      Tags: 
        - Key: Name  
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  DefualtPrivateRoute1: 
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  
  PrivateRouteTable2: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref CfnVPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Routes (AZ2)
  
  DefualtPrivateRoute2: 
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2


Outputs: 
  VPC: 
    Description: Reference to the created VPC
    Value: !Ref CfnVPC
    Export: 
      Name: !Sub ${EnvironmentName}-VPCID

  VPCPublicRouteTable:
    Description: The Public Routing
    Value: !Ref PublicRouteTable
    Export: 
      Name: !Sub ${EnvironmentName}-Pub-Rt

  VPCPrivateRouteTable1:
    Description: The Private Routing for AZ1
    Value: !Ref PrivateRouteTable1
    Export: 
      Name: !Sub ${EnvironmentName}-Pri1-Rt

  VPCPrivateRouteTable2:
    Description: The Private Routing for AZ2
    Value: !Ref PrivateRouteTable2
    Export: 
      Name: !Sub ${EnvironmentName}-Pri2-Rt
  
  PublicSubnets: 
    Description: A list of public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS
  
  PrivateSubnets: 
    Description: A list of Private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
          Name: !Sub ${EnvironmentName}-PRIV-NETS
  
  PublicSubnet1:
    Description: A reference to the public subnet in the first Availability Zone
    Value: !Ref PublicSubnet1
    Export:
          Name: !Sub ${EnvironmentName}-PUB-SN1
  
  PublicSubnet2:
    Description: A reference to the public subnet in the first Availability Zone
    Value: !Ref PublicSubnet2
    Export:
          Name: !Sub ${EnvironmentName}-PUB-SN2
  
  PrivateSubnet1:
    Description: A reference to the private subnet in the first Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PRI-SN1

  PrivateSubnet2:
    Description: A reference to the private subnet in the first Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PRI-SN2
        

  


          

  